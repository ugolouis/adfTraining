{
	"name": "SQL script 2",
	"properties": {
		"content": {
			"query": "-- Drop the procedure if it exists\nIF OBJECT_ID('DWH.usp_CreateFactDimensionTables', 'P') IS NOT NULL\n    DROP PROCEDURE DWH.usp_CreateFactDimensionTables;\nGO\n\n-- Create the stored procedure\nCREATE PROCEDURE DWH.usp_CreateFactDimensionTables\nAS\nBEGIN\n    SET NOCOUNT ON;\n\n    -- Create DimPatient table\n    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'DimPatient' AND schema_id = SCHEMA_ID('DWH'))\n    BEGIN\n        CREATE TABLE DWH.DimPatient\n        (\n            PatientKey INT IDENTITY(1,1) NOT NULL,\n            PatientID INT NOT NULL,\n            Title VARCHAR(25),\n            PatientName VARCHAR(64),\n            HospitalNumber VARCHAR(32),\n            AlternativeNumber VARCHAR(32),\n            Deceased VARCHAR(3),\n            NHSNumber VARCHAR(32),\n            DateOfBirth DATE,\n            Religion VARCHAR(64),\n            Ethnicity VARCHAR(64),\n            MaritalStatus VARCHAR(64),\n            Male VARCHAR(3),\n            Gender VARCHAR(64),\n            AddressStreet VARCHAR(100),\n            AddressArea VARCHAR(100),\n            AddressCity VARCHAR(100),\n            AddressCounty VARCHAR(100),\n            AddressPostcode VARCHAR(100),\n            DateTimeOfDeath DATETIME2,\n            LastName VARCHAR(50),\n            FirstName VARCHAR(50),\n            MiddleName VARCHAR(50),\n            GPPracticeID VARCHAR(50),\n            RecordLastUpdated DATETIME2,\n            HashValue BINARY(32),\n            DateFrom DATETIME2,\n            DateTo DATETIME2,\n            IsCurrent BIT,\n            CONSTRAINT PK_DimPatient PRIMARY KEY NONCLUSTERED (PatientKey) NOT ENFORCED\n        )\n        WITH\n        (\n            DISTRIBUTION = REPLICATE,\n            CLUSTERED COLUMNSTORE INDEX\n        );\n    END\n\n    -- Create DimLocation table\n    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'DimLocation' AND schema_id = SCHEMA_ID('DWH'))\n    BEGIN\n        CREATE TABLE DWH.DimLocation\n        (\n            LocationKey INT IDENTITY(1,1) NOT NULL,\n            Site VARCHAR(255),\n            Ward VARCHAR(60),\n            WardSpecialtyCode INT,\n            WardSpecialtyDescription VARCHAR(255),\n            WardClinicalUnit VARCHAR(255),\n            CONSTRAINT PK_DimLocation PRIMARY KEY NONCLUSTERED (LocationKey) NOT ENFORCED\n        )\n        WITH\n        (\n            DISTRIBUTION = REPLICATE,\n            CLUSTERED COLUMNSTORE INDEX\n        );\n    END\n\n    -- Create DimBed table\n    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'DimBed' AND schema_id = SCHEMA_ID('DWH'))\n    BEGIN\n        CREATE TABLE DWH.DimBed\n        (\n            BedKey INT IDENTITY(1,1) NOT NULL,\n            Bed VARCHAR(30) NOT NULL,\n            BedArea VARCHAR(30),\n            BedWard VARCHAR(60),\n            CONSTRAINT PK_DimBed PRIMARY KEY NONCLUSTERED (BedKey) NOT ENFORCED\n        )\n        WITH\n        (\n            DISTRIBUTION = REPLICATE,\n            CLUSTERED COLUMNSTORE INDEX\n        );\n    END\n\n    -- Create DimChiefComplaint table\n    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'DimChiefComplaint' AND schema_id = SCHEMA_ID('DWH'))\n    BEGIN\n        CREATE TABLE DWH.DimChiefComplaint\n        (\n            ChiefComplaintKey INT IDENTITY(1,1) NOT NULL,\n            ChiefComplaintSNOMEDCode VARCHAR(18),\n            ChiefComplaintDescription VARCHAR(100),\n            ChiefComplaintGroupName VARCHAR(255),\n            CONSTRAINT PK_DimChiefComplaint PRIMARY KEY NONCLUSTERED (ChiefComplaintKey) NOT ENFORCED\n        )\n        WITH\n        (\n            DISTRIBUTION = REPLICATE,\n            CLUSTERED COLUMNSTORE INDEX\n        );\n    END\n\n    -- Create DimEdAttendanceType table\n    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'DimEdAttendanceType' AND schema_id = SCHEMA_ID('DWH'))\n    BEGIN\n        CREATE TABLE DWH.DimEdAttendanceType\n        (\n            EdAttendanceTypeKey INT IDENTITY(1,1) NOT NULL,\n            EdAttendanceTypeCode INT NOT NULL,\n            EdAttendanceTypeDescription VARCHAR(255),\n            CONSTRAINT PK_DimEdAttendanceType PRIMARY KEY NONCLUSTERED (EdAttendanceTypeKey) NOT ENFORCED\n        )\n        WITH\n        (\n            DISTRIBUTION = REPLICATE,\n            CLUSTERED COLUMNSTORE INDEX\n        );\n    END\n\n    -- Create DimSpecialty table\n    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'DimSpecialty' AND schema_id = SCHEMA_ID('DWH'))\n    BEGIN\n        CREATE TABLE DWH.DimSpecialty\n        (\n            SpecialtyKey INT IDENTITY(1,1) NOT NULL,\n            SpecialtyCode VARCHAR(255) NOT NULL,\n            SpecialtyDescription VARCHAR(255),\n            SpecialtyDivision VARCHAR(255),\n            CONSTRAINT PK_DimSpecialty PRIMARY KEY NONCLUSTERED (SpecialtyKey) NOT ENFORCED\n        )\n        WITH\n        (\n            DISTRIBUTION = REPLICATE,\n            CLUSTERED COLUMNSTORE INDEX\n        );\n    END\n\n    -- Create DimBreachReason table\n    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'DimBreachReason' AND schema_id = SCHEMA_ID('DWH'))\n    BEGIN\n        CREATE TABLE DWH.DimBreachReason\n        (\n            BreachReasonKey INT IDENTITY(1,1) NOT NULL,\n            BreachReason VARCHAR(50) NOT NULL,\n            CONSTRAINT PK_DimBreachReason PRIMARY KEY NONCLUSTERED (BreachReasonKey) NOT ENFORCED\n        )\n        WITH\n        (\n            DISTRIBUTION = REPLICATE,\n            CLUSTERED COLUMNSTORE INDEX\n        );\n    END\n\n    -- Create DimDischargeDestination table\n    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'DimDischargeDestination' AND schema_id = SCHEMA_ID('DWH'))\n    BEGIN\n        CREATE TABLE DWH.DimDischargeDestination\n        (\n            DischargeDestinationKey INT IDENTITY(1,1) NOT NULL,\n            DischargeDestination VARCHAR(255),\n            DischargeDestinationGroup VARCHAR(255),\n            DischargeDestinationCode INT,\n            CONSTRAINT PK_DimDischargeDestination PRIMARY KEY NONCLUSTERED (DischargeDestinationKey) NOT ENFORCED\n        )\n        WITH\n        (\n            DISTRIBUTION = REPLICATE,\n            CLUSTERED COLUMNSTORE INDEX\n        );\n    END\n\n    -- Create DimEdDepartmentType table\n    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'DimEdDepartmentType' AND schema_id = SCHEMA_ID('DWH'))\n    BEGIN\n        CREATE TABLE DWH.DimEdDepartmentType\n        (\n            EdDepartmentTypeKey INT IDENTITY(1,1) NOT NULL,\n            EdDepartmentType VARCHAR(1) NOT NULL,\n            EdDepartmentTypeDescription VARCHAR(50),\n            CONSTRAINT PK_DimEdDepartmentType PRIMARY KEY NONCLUSTERED (EdDepartmentTypeKey) NOT ENFORCED\n        )\n        WITH\n        (\n            DISTRIBUTION = REPLICATE,\n            CLUSTERED COLUMNSTORE INDEX\n        );\n    END\n\n    -- Create FactPatientEdJourney table\n    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'FactPatientEdJourney' AND schema_id = SCHEMA_ID('DWH'))\n    BEGIN\n        CREATE TABLE DWH.FactPatientEdJourney\n        (\n            PatientKey DATETIME2,\n            VisitID VARCHAR(255),\n            EpisodeID INT,\n            AttendanceTypeKey INT,\n            ModeOfArrivalKey INT,\n            LastLocationKey INT,\n            SpecialtyKey INT,\n            BreachReasonKey INT,\n            DischargeDestinationKey INT,\n            ReferralDateTime DATETIME,\n            ArrivalDateTime DATETIME2,\n            InitialAssessmentDateTime DATETIME2,\n            ClinicalTriageDateTime DATETIME2,\n            FirstTreatmentDateTime DATETIME2,\n            ClockstopDateTime BIT,\n            ReferralCompletedDateTime DATETIME2,\n            VisitDuration INT,\n            VisitCount INT,\n            WaitForTriage INT,\n            WaitForTreatment INT,\n            AdmittedToHospital VARCHAR(50),\n            ClinicallyReadyToProceedDateTime DATETIME2,\n            ClinicallyReadyToProceedDelay VARCHAR(100),\n            AttendanceTypeChangesCount INT,\n            SeenByGP VARCHAR(10),\n            SeenByECP VARCHAR(10),\n            StreamedAtAssessment INT,\n            LastDecisionToAdmitDateTime DATETIME2,\n            AttendingAsPlannedReturn VARCHAR(50),\n            NumberOfBreaches INT\n        )\n        WITH\n        (\n            DISTRIBUTION = ROUND_ROBIN,\n            CLUSTERED COLUMNSTORE INDEX\n        );\n    END\n\n    -- Create DimModeOfArrival table\n    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'DimModeOfArrival' AND schema_id = SCHEMA_ID('DWH'))\n    BEGIN\n        CREATE TABLE DWH.DimModeOfArrival\n        (\n            ModeOfArrivalKey INT NOT NULL,\n            ModeOfArrivalDescription NVARCHAR(100),\n            ModeOfArrivalCode NVARCHAR(18),\n            CONSTRAINT PK_DimModeOfArrival PRIMARY KEY NONCLUSTERED (ModeOfArrivalKey) NOT ENFORCED\n        )\n        WITH\n        (\n            DISTRIBUTION = REPLICATE,\n            CLUSTERED COLUMNSTORE INDEX\n        );\n    END\n\n    -- Create DimDischargeStatus table\n    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'DimDischargeStatus' AND schema_id = SCHEMA_ID('DWH'))\n    BEGIN\n        CREATE TABLE DWH.DimDischargeStatus\n        (\n            DischargeStatusKey INT NOT NULL,\n            DischargeStatus VARCHAR(255),\n            DischargeStatusGroup VARCHAR(255),\n            DischargeStatusCode INT,\n            CONSTRAINT PK_DimDischargeStatus PRIMARY KEY NONCLUSTERED (DischargeStatusKey) NOT ENFORCED\n        )\n        WITH\n        (\n            DISTRIBUTION = REPLICATE,\n            CLUSTERED COLUMNSTORE INDEX\n        );\n    END\nEND;\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "taxi",
				"poolName": "taxi"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}