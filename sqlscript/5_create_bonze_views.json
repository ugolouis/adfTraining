{
	"name": "5_create_bonze_views",
	"properties": {
		"folder": {
			"name": "nyc_taxi/ldw"
		},
		"content": {
			"query": "USE nyc_taxi_ldw\nGO\n\nDROP VIEW IF EXISTS bronze.vw_rate_code \nGO\n\n\nCREATE VIEW bronze.vw_rate_code\nAS\nSELECT rate_code_id, rate_code\nFROM\n    OPENROWSET(\n        BULK '/raw/rate_code.json',\n        DATA_SOURCE = 'nyc_taxi_ldw',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '1.0',\n        FIELDQUOTE = '0x0b',\n        FIELDTERMINATOR ='0x0b',\n        ROWTERMINATOR = '0x0b'\n    )\n    WITH \n    (\n        jsonContent varchar(MAX)\n    ) AS rate_code\n    CROSS APPLY OPENJSON(jsonContent)\n    WITH (\n \n       rate_code_id TINYINT, \n       rate_code VARCHAR(20)\n    )\n    GO\n\nSELECT * FROM bronze.vw_rate_code\n\n\n\n--- create payment type view\n\nDROP VIEW IF EXISTS bronze.payment_type\nGO\n\nCREATE VIEW bronze.payment_type\nAS\n SELECT payment_type, payment_type_desc\nFROM\n    OPENROWSET(\n        BULK '/raw/payment_type.json',\n        DATA_SOURCE = 'nyc_taxi_ldw',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '1.0',\n        FIELDQUOTE = '0x0b',\n        FIELDTERMINATOR ='0x0b',\n        ROWTERMINATOR = '0x0a'\n    )\n    WITH \n    (\n        jsonContent varchar(MAX)\n    ) AS payment_type\n    CROSS APPLY OPENJSON(jsonContent)\n    WITH (\n \n       payment_type SMALLINT, payment_type_desc VARCHAR(50)\n    )\n    GO\n\n\n    SELECT * FROM bronze.payment_type;\n\n\n    --- create VIEW for trip_data_green\nDROP VIEW IF EXISTS bronze.vw_trip_data_green_csv\n     GO\n\n    CREATE VIEW bronze.vw_trip_data_green_csv\n     AS\n    SELECT \n    result.filepath(1) AS Year,\n    result.filepath(2) AS Month, \n    result.*\nFROM\n    OPENROWSET(\n        BULK '/raw/trip_data_green_csv/year=*/month=*/*.csv',\n        DATA_SOURCE = 'nyc_taxi_ldw',\n        HEADER_ROW = TRUE,\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0'\n    ) AS [result]\n    -- WHERE result.filename() IN ('green_tripdata_2020-01.csv', 'green_tripdata_2021-02.csv')\n    -- GROUP BY result.filepath(),result.filename() \n    -- ORDER BY result.filepath()\n\n\n    SELECT TOP (100) * FROM bronze.vw_trip_data_green_csv\n    WHERE Year = '2020' AND Month = '09'\n    GO\n\n    SELECT COUNT(1) FROM bronze.vw_trip_data_green_csv\n\n\n    --- create view with 'WITH' clause that defines columns explicitly\n\n      --- create VIEW for trip_data_green\nDROP VIEW IF EXISTS bronze.vw_trip_data_green_csv2\n     GO\n\n    CREATE VIEW bronze.vw_trip_data_green_csv2\n     AS\n    SELECT \n    result.filepath(1) AS Year,\n    result.filepath(2) AS Month, \n    result.*\nFROM\n    OPENROWSET(\n        BULK '/raw/trip_data_green_csv/year=*/month=*/*.csv',\n        DATA_SOURCE = 'nyc_taxi_ldw',\n        HEADER_ROW = TRUE,\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0'\n    ) \nWITH (\n    \n       VendorID INT,\n       lpep_pickup_datetime datetime2(7),\n       lpep_dropoff_datetime datetime2(7),\n       store_and_fwd_flag CHAR(1),\n       RatecodeID INT,\n       PULocationID INT,\n       DOLoctionID INT,\n       passenger_coun INT,\n       trip_distance FLOAT,\n       fare_amount FLOAT,\n       extra FLOAT,\n       mta_tax FLOAT,\n       tip_amount FLOAT,\n       tolls_amount FLOAT,\n       ehail_fee INT,\n       improvement_surcharge FLOAT,\n       total_amount FLOAT,\n       payment_type INT,\n       trip_type INT,\n       congestion_surcharge FLOAT\n) AS [result]\n\n\nselect top(10) * from bronze.vw_trip_data_green_csv2",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "nyc_taxi_ldw",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}