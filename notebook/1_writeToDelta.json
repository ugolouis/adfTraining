{
	"name": "1_writeToDelta",
	"properties": {
		"folder": {
			"name": "ECDS_notebooks"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "esht",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "0e83b5a6-5bcb-495a-85a1-19afae30be9c"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/f6e89fe8-0d17-497c-9795-5ecb2ab3bbcc/resourceGroups/SynapseRG/providers/Microsoft.Synapse/workspaces/ugolouis-synapse-ws/bigDataPools/esht",
				"name": "esht",
				"type": "Spark",
				"endpoint": "https://ugolouis-synapse-ws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/esht",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Initial set up - declare variables and imports"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# complete imports\r\n",
					"from pyspark.sql import SparkSession\r\n",
					"from pyspark.sql.functions import col, when, current_timestamp, current_date\r\n",
					"from delta.tables import DeltaTable"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# define variables\r\n",
					"storage_account_name = \"synapsestr\"\r\n",
					"container_name = \"nervecentre-data\"\r\n",
					"delta_container_name = \"nervecentre-delta\"\r\n",
					"source_relative_path = \"/ECDS_Accomodation_Type_vw.csv\"\r\n",
					"target_relative_path = \"/ECDS_Accomodation_Type.csv\"\r\n",
					"source_path = f'abfss://{container_name}@{storage_account_name}.dfs.core.windows.net{source_relative_path}'\r\n",
					"target_path = f'abfss://{container_name}@{storage_account_name}.dfs.core.windows.net{target_relative_path}'\r\n",
					"source_delta_path = f'abfss://{delta_container_name}@{storage_account_name}.dfs.core.windows.net/ECDS_Accomodation_Type_vw_delta'\r\n",
					"target_delta_path = f'abfss://{delta_container_name}@{storage_account_name}.dfs.core.windows.net/ECDS_Accomodation_Type_delta'"
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Processing ECDS Accomodation_Type SP"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"ms_comments": [],
					"collapsed": false
				},
				"source": [
					"# read source and target csv files\r\n",
					"\r\n",
					"# Step 1: Read the source CSV file\r\n",
					"source_csv_df = spark.read.format(\"csv\") \\\r\n",
					"              .option(\"header\", \"true\") \\\r\n",
					"              .option(\"inferSchema\", \"true\") \\\r\n",
					"              .load(source_path)\r\n",
					"\r\n",
					"# display(src_df)\r\n",
					"\r\n",
					"\r\n",
					"# Step 2: Read the target CSV file\r\n",
					"target_csv_df = spark.read.format(\"csv\") \\\r\n",
					"              .option(\"header\", \"true\") \\\r\n",
					"              .option(\"inferSchema\", \"true\") \\\r\n",
					"              .load(target_path)\r\n",
					""
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Step 2: Read the target CSV file\r\n",
					"target_csv_df = spark.read.format(\"csv\") \\\r\n",
					"              .option(\"header\", \"true\") \\\r\n",
					"              .option(\"inferSchema\", \"true\") \\\r\n",
					"              .load(target_path)"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"\r\n",
					"# Write the read CSV to Delta tables\r\n",
					"source_csv_df.write.format(\"delta\").mode(\"overwrite\").save(source_delta_path)\r\n",
					"target_csv_df.write.format(\"delta\").mode(\"overwrite\").save(target_delta_path)"
				],
				"execution_count": 7
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# ECDS_AlcoholDrug_UpdateV3_sp"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# define variables\r\n",
					"storage_account_name = \"synapsestr\"\r\n",
					"container_name = \"nervecentre-data\"\r\n",
					"delta_container_name = \"nervecentre-delta\"\r\n",
					"source_relative_alcohol_path1 = \"/ECDS_AlcoholDrug_vw.csv\"\r\n",
					"target_relative_alcohol_path = \"/ECDS_AlcoholDrugV2_vw.csv\"\r\n",
					"target_relative_alcohol_path = \"/ECDS_AlcoholDrug.csv\"\r\n",
					"source_alcohol_path1 = f'abfss://{container_name}@{storage_account_name}.dfs.core.windows.net{source_relative_alcohol_path1}'\r\n",
					"source_alcohol_path2 = f'abfss://{container_name}@{storage_account_name}.dfs.core.windows.net{source_relative_alcohol_path1}'\r\n",
					"target_alcohol_path1 = f'abfss://{container_name}@{storage_account_name}.dfs.core.windows.net{target_relative_alcohol_path}'\r\n",
					"\r\n",
					"source_delta_alcohol_path1 = f'abfss://{delta_container_name}@{storage_account_name}.dfs.core.windows.net/ECDS_AlcoholDrug_vw'\r\n",
					"source_delta_alcohol_path2 = f'abfss://{delta_container_name}@{storage_account_name}.dfs.core.windows.net/ECDS_AlcoholDrugV2_vw'\r\n",
					"target_delta_alcohol_path1 = f'abfss://{delta_container_name}@{storage_account_name}.dfs.core.windows.net/ECDS_AlcoholDrug'\r\n",
					"\r\n",
					"\r\n",
					"# Step 1: Read the source CSV file\r\n",
					"source_csv_df1 = spark.read.format(\"csv\") \\\r\n",
					"              .option(\"header\", \"true\") \\\r\n",
					"              .option(\"inferSchema\", \"true\") \\\r\n",
					"              .load(source_alcohol_path1)\r\n",
					"\r\n",
					"\r\n",
					"source_csv_df2 = spark.read.format(\"csv\") \\\r\n",
					"              .option(\"header\", \"true\") \\\r\n",
					"              .option(\"inferSchema\", \"true\") \\\r\n",
					"              .load(source_alcohol_path2)\r\n",
					"\r\n",
					"target_csv_df1 = spark.read.format(\"csv\") \\\r\n",
					"              .option(\"header\", \"true\") \\\r\n",
					"              .option(\"inferSchema\", \"true\") \\\r\n",
					"              .load(target_alcohol_path1)\r\n",
					"\r\n",
					"\r\n",
					"# Write the read CSV to Delta tables\r\n",
					"source_csv_df1.write.format(\"delta\").mode(\"overwrite\").save(source_delta_alcohol_path1)\r\n",
					"source_csv_df2.write.format(\"delta\").mode(\"overwrite\").save(source_delta_alcohol_path2)\r\n",
					"target_csv_df1.write.format(\"delta\").mode(\"overwrite\").save(target_delta_alcohol_path1)"
				],
				"execution_count": 22
			}
		]
	}
}